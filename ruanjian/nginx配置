user root;

events {
    worker_connections  1024;
}


http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    server {
         #HTTPS的默认访问端口443。
         #如果未在此处配置HTTPS的默认访问端口，可能会造成Nginx无法启动。
         listen 443 ssl;

         #填写证书绑定的域名
         server_name guangsu.fun;

         #填写证书文件绝对路径
         ssl_certificate cert/guangsu.fun.pem;
         #填写证书私钥文件绝对路径
         ssl_certificate_key cert/guangsu.fun.key;

         ssl_session_cache shared:SSL:1m;
         ssl_session_timeout 5m;

         #表示优先使用服务端加密套件。默认开启
         #ssl_prefer_server_ciphers on;


        location / {
            root /guangsu/guangsu;
            index index.html index.htm;
            try_files $uri $uri/ =404;
        }

        location ~* \.(css|js)$ {
            root /guangsu/guangsu;
            expires 1d;
            add_header Cache-Control "public";
        }
    }

    server {
        listen 80;
        server_name guangsu.fun;

        # rewrite ^(.*)$ https://$host$1;

        location / {
            root /guangsu/guangsu;
            index index.html index.htm;
            try_files $uri $uri/ =404;
        }

        location ~* \.(css|js)$ {
            root /guangsu/guangsu;
            expires 1d;
            add_header Cache-Control "public";
        }
    }

    server {
         #HTTPS的默认访问端口443。
         #如果未在此处配置HTTPS的默认访问端口，可能会造成Nginx无法启动。
         listen 443 ssl;

         #填写证书绑定的域名
         server_name 520rj.top;

         #填写证书文件绝对路径
         ssl_certificate cert/520rj.top.pem;
         #填写证书私钥文件绝对路径
         ssl_certificate_key cert/520rj.top.key;

         ssl_session_cache shared:SSL:1m;
         ssl_session_timeout 5m;

         #表示优先使用服务端加密套件。默认开启
         #ssl_prefer_server_ciphers on;


        location / {
            root /520rj;
            index index.html index.htm;
            try_files $uri $uri/ =404;
        }

        location ~* \.(css|js)$ {
            root /520rj;
            expires 1d;
            add_header Cache-Control "public";
        }
    }
    
    server {
        listen 80;
        server_name 520rj.top;

        # rewrite ^(.*)$ https://$host$1;

        location / {
            root /520rj;
            index index.html index.htm;
            try_files $uri $uri/ =404;
        }

        location ~* \.(css|js)$ {
            root /520rj;
            expires 1d;
            add_header Cache-Control "public";
        }
    }

    #rjzs
    server {
        listen 80;
        server_name rjzs.top;

        # rewrite ^(.*)$ https://$host$1;

        location / {
            root /rjzs;
            index index.html index.htm;
            try_files $uri $uri/ =404;
        }

        location ~* \.(css|js)$ {
            root /rjzs;
            expires 1d;
            add_header Cache-Control "public";
        }
    }

    #rjxz
    server {
        listen 80;
        server_name rjxz.top;

        # rewrite ^(.*)$ https://$host$1;

        location / {
            root /rjxz;
            index index.html index.htm;
            try_files $uri $uri/ =404;
        }

        location ~* \.(css|js)$ {
            root /rjxz;
            expires 1d;
            add_header Cache-Control "public";
        }
    }
}







